I"q<hr />

<h1 id="背景介绍"><a href="#背景介绍"></a>背景介绍</h1>

<p>网络攻击复杂程度和规模都在不断变化，目前最广为人知的就是高级可持续性威胁（Advanced Persistent Threats，APT），通过各种攻击向量来达到长期入侵的目的。由于APT可以轻松绕过反病毒软件，而端点检测响应系统（Endpoint Detection and Response，EDR）则提供了更加全面的检测方法，通过将跨组织的多个主机信息和事件关联，从而为蓝队提供对威胁的深入理解。</p>

<p>由于最近发生的网络安全事件表明了目前的安全机制并不能完全防御APT攻击，所以作者决定通过APT组织模拟工具来创建四个场景，以此来测试企业防御能力，并说明EDR存在的一些弱点</p>

<h1 id="相关工作">相关工作</h1>

<ol>
  <li>
    <p>EDR可以检测未知的威胁并组织，因为 EDR 优先考虑准确率而不是召回率，这也意味着会存在许多误报。这也是 Hassan 等人引入战术源图（Tactical Provenance Graphs，TPG）的原因，通过分析 EDR 威胁警报之间的因果关系，设计了一个不同的评分系统，以降低误报。虽然 EDR 极大地提高了安全性，但整体安全还是高度依赖人的因素，比如蓝队经验。作者在这里不考虑人的因素，而是把重点放在 EDR 对事件的自动记录、标记和阻止上。</p>
  </li>
  <li>
    <p>正如 Chen 等人指出的，APT攻击包括六个阶段：</p>

    <ol>
      <li>侦察和准备攻击工具</li>
      <li>投递</li>
      <li>初始入侵</li>
      <li>发送命令与控制</li>
      <li>横向移动</li>
      <li>数据窃取。</li>
    </ol>

    <p>作为该模型的补充，可以使用攻击树来表示APT，还可以使用信息流来检测APT攻击。<br /><br /></p>
  </li>
  <li>
    <p>网络杀伤链允许安全分析员将整个攻击分解为不同的阶段，其中MITRE的ATT&amp;CK就是一个试图描述整个攻击生命周期威胁的知识库和模型，通过使用ATT&amp;CK模型可以模拟威胁场景或评估防御效果。最近Pols介绍的标准杀伤链（Unified Kill Chain）扩展了网络杀伤链和ATT&amp;CK未涉及的问题。</p>
  </li>
</ol>

<h1 id="研究的问题">研究的问题</h1>

<ol>
  <li>EDR 是否能检测常见的 APT 攻击？</li>
  <li>EDR 有哪些检测盲点？</li>
  <li>EDR 的报告有哪些信息和意义？</li>
  <li>如何降低 EDR 报告中威胁的重要性或阻止威胁报告？</li>
</ol>

<h1 id="主要贡献">主要贡献</h1>

<p>对真实世界产生的威胁警告进行系统性的评估，并从攻击者的角度提供攻击过程的技术细节，值得注意的是作者的工作是试图找出代表性的攻击，并不是成为 EDR 的安全投资指南。</p>

<h1 id="实验设计">实验设计</h1>

<p>使用过期的域名指向部署了cobaltstrike的服务器，同时使用了有效的SSL证书加密C2通信流量，在受害主机上使用了malleable C2框架，因为它修改了CS代理的指纹，这将隐藏一些恶意软件的活动。</p>

<h3 id="攻击向量">攻击向量</h3>
<p><strong>（通过钓鱼邮件投放恶意的附加文件）—— 仅针对EDR进行评估</strong></p>

<ol>
  <li>.cpl 文件</li>
  <li>通过合法的 MS Team 加载恶意 DLL
    <blockquote>
      <p>使用 Brownie-Koppeling 从system32 创建一个合法的恶意 DLL 并添加到 MS Teams 的文件夹</p>
    </blockquote>
  </li>
  <li>未签名的 PE 可执行文件
    <blockquote>
      <p>在带有 CIG 和欺骗的 PPID 的子进程中注入代码，在执行主程序前使用 QueueUserAPC 执行 shellcode</p>
    </blockquote>
  </li>
  <li>HTA 文件
    <blockquote>
      <p>使用 C# 和 Gadget2JScript 工具生成一系列代码片段在内存中执行 shellcode</p>
    </blockquote>
  </li>
</ol>

<h1 id="实验评估">实验评估</h1>

<p>作者针对四种攻击向量评估了 11 个最先进的 EDR，从发动的攻击中有一半以上成功，并且在这 11 个 EDR 中没有一个能检测到所有的攻击。</p>

<p><img src="https://bu-shuo.github.io/image/2021-07-17-01.jpg" alt="评估结果" /></p>

<h1 id="对-edr-的攻击">对 EDR 的攻击</h1>

<ul>
  <li>攻击 Defender for Endpoints（使用 WinDBG 手动执行）
    <ul>
      <li>手动对回调函数打补丁再去加载未签名的驱动</li>
      <li>手动对 ETWTi 函数打补丁去转储 LSASS 但不触发警报</li>
    </ul>
  </li>
  <li>攻击 Sophos Intercept X
    <ul>
      <li>使用一个合法的、有签名的、易受攻击的驱动程序，通过利用它访问内核并加载一个定制的、无签名的驱动程序，再通过该驱动暂停回调。</li>
    </ul>
  </li>
</ul>

<h1 id="总结">总结</h1>

<p>通过评估最先进的 EDR 的反应以及报告，说明了没有一个 EDR 能够有效检测和阻止作者部署的四种攻击场景。另外，作者又通过对 EDR 的攻击实验证明了可以通过攻击内核使 EDR 失效。同时，作者提出了未来将评估不同 EDR 的准确率、漏报率和误报率，通过这些来评估蓝队在实际攻击场景下面临的困难。</p>
:ET