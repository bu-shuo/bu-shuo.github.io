I"1<p><br /></p>

<h1 id="0x00-介绍">0x00 介绍</h1>
<hr />

<p>大量的日志经常被用于离线分析或实时监控，以调试系统故障或识别威胁。目前的研究主要有从审计日志构建因果关系图，并使用查询系统定位关键攻击阶段；有对机器学习技术进行扩展，从日志中自动提取特征或序列来检测故障和入侵；还有通过事件相关性构建技术，发现不同日志事件之间的联系。但这些工作很大程度上无法精准定位端到端的攻击过程。</p>

<p>本文提出的 ATLAS 主要是从审计日志中识别关键节点，然后协助安全分析师构建攻击过程。ATLAS 将自然语言处理（NLP）和深度学习集成到数据分析中，用来识别攻击和非攻击序列。这种基于序列的表示方法很好地适应了模型的训练，使模型具有更深层次的因果关系记忆，从而提高了序列模型识别未知审计日志攻击步骤的准确性。然而，这种方法面临如下的挑战：</p>

<ol>
  <li>因果关系图大而复杂，使序列构建困难</li>
  <li>需要一种方法精确构建序列，有效地对良性和恶意活动建模</li>
  <li>需要一种自动化的方法识别攻击事件</li>
</ol>

<p>ATLAS 使用了定制的图优化算法降低图的复杂性，实现从日志事件中提取攻击模式序列，并通过攻击症状进行攻击调查，以恢复攻击事件，帮助全面构建攻击过程。</p>

<h1 id="0x01-贡献">0x01 贡献</h1>
<hr />

<ol>
  <li>本文设计的 ATLAS 是一种用于攻击过程还原的框架，利用自然语言处理和基于序列的模型，帮助网络分析师从审计日志中恢复攻击过程。</li>
  <li>提出一种新的序列表示方法，通过词形还原（Lemmatization）和词嵌入（Word Embeddings）来抽象攻击和非攻击语义模式。</li>
  <li>验证了 ATLAS 在 10 个真实 APT 攻击中的效果，结果表明，ATLAS 能够以较高的准确性和最小的开销识别攻击事件的关键攻击条目。</li>
</ol>

<h1 id="0x02-背景">0x02 背景</h1>
<hr />

<p>大多数的研究从因果关系图中将攻击过程恢复为子图以展开攻击调查，如下图中 a 所示，红色虚线框中表示的是恢复的攻击子图，图中 b 是 APT 攻击步骤的描述，图 c 则是 ATLAS 恢复的攻击过程。</p>

<p><img src="https://bu-shuo.github.io/image/2021-08-15-01.png" alt="恢复攻击图" /></p>

<ol>
  <li>在恢复攻击子图的过程中虽然采用了不同的图优化技术，但由于很大程度上依赖启发式或硬编码规则，开发和维护这些规则非常耗时，需要专家并不断更新规则库，ATLAS 只需要更多的攻击训练数据来学习新的攻击模式。</li>
  <li>虽然基于异常的方法可以识别未知的攻击，但随着用户行为的变化可能会产生大量误报。为了解决这个问题， ATLAS 旨在区分攻击行为和用户行为。</li>
  <li>与 ATLAS 类似基于深度学习的算法从日志中建模攻击事件，虽然减少了日志数量，但仍需要大量的人工工作来查找攻击事件的高级视图。而 ATLAS 旨在识别攻击的关键节点，然后自动识别相关攻击事件的子集。</li>
</ol>

<p>定义：（如下图所示）</p>

<p><img src="https://bu-shuo.github.io/image/2021-08-15-02.png" alt="定义图示" /></p>

<p><strong>因果关系图（Causal Graph）：</strong> 因果关系图是从审计日志中提取的数据结构，常用于源头跟踪，表示主体与对象之间的因果关系。<br />
<strong>邻域图（Neighborhood Graph）：</strong> 给定一个因果关系图，如果两个节点由一条边连接，则称它们是邻居。所以对于给定节点，邻域图包括该节点和邻居节点，并且包含邻居节点的所有边。<br />
<strong>事件（Event）：</strong> 一个事件由一个四元组（src，action，dest，t）组成，源（src）和目的（dest）是与一个动作（action）相连的两个实体，而 t 则表示事件发生的时间。<br />
<strong>序列（Sequence）：</strong> 给定实体 e，可以从因果关系中提取包含实体 e 邻域图的所有事件。</p>

<h1 id="0x03-总体框架">0x03 总体框架</h1>
<hr />

<p>作者设计的 ATLAS 通过将自然语言处理和深度学习技术集成到数据源分析中，对基于序列的攻击和非攻击行为进行建模，ATLAS 的总体框架如下图所示，其主要由两部分组成：基于序列的模型学习（a）和攻击调查（b）。</p>

<p><img src="https://bu-shuo.github.io/image/2021-08-15-03.png" alt="总体框架" /></p>

<ol>
  <li><strong>基于序列的模型学习（sequence-based model learning）：</strong> ATLAS 首先根据系统和应用日志构建因果关系图，再通过实现一组预处理优化来减少获取复杂序列的难度，接着 ATLAS 从优化后的因果关系图中构建攻击和非攻击序列，再对非攻击序列进行欠采样，对攻击序列进行过采样来平衡攻击和非攻击序列的比例。最后 ATLAS 使用词嵌入将词形还原后的序列映射到向量来捕获序列中实体上下文及其他实体的关系。通过这些步骤提取到的序列通过不同的因果关系加强对攻击模式的记忆，这有助于建立一个准确的模型来识别不同攻击。</li>
  <li><strong>攻击调查（attack investigation）：</strong> ATLAS 将带有攻击序列的实体与每个未知实体相连构建序列，并使用经过训练的模型来识别序列是否是攻击序列，若归类为攻击序列，ATLAS就推断推断未知实体为攻击实体。</li>
</ol>

<h3 id="挑战--应对">挑战 &amp; 应对：</h3>

<ol>
  <li>构建序列来模拟良性和恶意活动的序列：审计日志中存在大量的唯一实体，每个实体集都映射到任意长度序列；相同的攻击模式发生在不同的进程执行中，这些可能导致长且重复的序列影响模型的收敛性和精度。为了解决这些问题，ATLAS 使用定制的图优化算法降低图的复杂性，以此来得到适当长度的序列。</li>
  <li>模型从序列中学习：只有少数的活动标志真正的攻击，这导致不平衡的数据集极大破化了学习过程，并倾向于模型偏向非攻击序列，使许多攻击序列未被检测到。针对该问题，ATLAS 通过欠采样减少非攻击序列的数量，过采样生成额外的攻击序列，以此来平衡攻击与非攻击序列间的平衡。</li>
  <li>使用基于训练的序列模型自动进行攻击调查：ATLAS 支持在模型上查询任意序列，并报告该序列是攻击还是非攻击序列，但可能还需要找到许多具有候选攻击实体的序列。针对该问题，ATLAS 包含了攻击调查阶段，该阶段对审计日志中的实体进行全面分析，以识别与攻击症状实体匹配的攻击序列中的实体。</li>
</ol>

<h1 id="0x04-atlas-设计细节">0x04 ATLAS 设计细节</h1>
<hr />

<h3 id="1-审计日志预处理audit-log-pre-processing">1. 审计日志预处理（Audit Log Pre-processing）：</h3>
<p>ATLAS 在构建因果关系图时通过以下技术来进行图的优化，降低日志的复杂性：</p>
<ul>
  <li>ATLAS 消除了攻击节点或有攻击症状的节点无法到达的所有节点和边</li>
  <li>ATLAS 从具有非重复边的审计日志中构建因果关系图</li>
  <li>如果某些节点和涉及同一类型的事件，ATLAS 将它们合并（如下图所示）</li>
</ul>

<p><img src="https://bu-shuo.github.io/image/2021-08-15-04.png" alt="同类事件合并" /></p>

<h3 id="2-序列构造与学习sequence-construction-and-learning">2. 序列构造与学习（Sequence Construction and Learning）：</h3>
<p>ATLAS 将因果关系图转化为序列以有效抽象攻击和非攻击模式，利用词嵌入将序列转换为实数向量，通过 LSTM 学习基于序列的模型。</p>

<h4 id="21-攻击与非攻击序列提取attack-and-non-attack-sequence-extraction">2.1 攻击与非攻击序列提取（Attack and Non-attack Sequence Extraction）：</h4>
<p>在发生攻击时，已记录的恶意主机名和有效载荷等实体标记为“攻击”，其他实体被标记为“非攻击”。ATLAS 首先从因果关系图中获得所有攻击实体的集合，对于攻击实体子集（包含两个或两个以上的攻击实体）中的每个实体，ATLAS 提取其邻域图，使 ATLAS 能捕获与攻击实体有因果关系的所有实体；其次，ATLAS 从构建的邻域图中获取按时间戳排序的攻击事件。若事件的源节点或目标节点为攻击实体，则事件被标记为攻击事件。ATLAS 不尝试学习或识别任何良性活动，而是为了准确识别恶意活动与非恶意活动的边界，所以 ATLAS 在每个攻击子集中添加一个非攻击实体，以提取非攻击序列。</p>

<p><img src="https://bu-shuo.github.io/image/2021-08-15-05.png" alt="序列提取" /></p>

<h4 id="22-序列的词形还原sequence-lemmatization">2.2 序列的词形还原（Sequence Lemmatization）：</h4>
<p>词形还原常用于自然语言处理中，它基于词典将单词的复杂形态转变成最基础的形态，该过程保留了序列的原始语义。下图展示了根据单词的语义划分出四种不同的词汇类型：进程（process）、文件（file）、网络（network）、动作（actions）。ATLAS 解析每个序列，找到实体并将它们映射到相应的词汇表。攻击序列和非攻击序列的重叠可能会出现在词形还原之后，为了用非重复序列模型训练，作者丢弃了所有与攻击序列重叠的非攻击序列，然后再将其进行选择性序列抽样。</p>

<p><img src="https://bu-shuo.github.io/image/2021-08-15-06.png" alt="语义分类" /></p>

<h4 id="23-选择性序列采样selective-sequence-sampling">2.3 选择性序列采样（Selective Sequence Sampling）：</h4>
<p>攻击序列与非攻击序列的数量可能是不平衡的，使用这样的数据集训练分类器可能会使它偏向非攻击类或无法学习攻击类。为了平衡训练的数据集，ATLAS 首先用一定阈值对非攻击序列进行欠采样，然后利用过采样机制对攻击序列进行随机变异，直到其总数达到与非攻击序列相同的数量。</p>

<h4 id="24-序列嵌入和模型学习sequence-embedding-and-model-learning">2.4 序列嵌入和模型学习（Sequence Embedding and Model Learning）：</h4>
<p>ATLAS 使用词表示的嵌入（word-representations embedding）将词形还原后的序列转换为一般文本表示的序列模型，序列被转换为数值向量，这些向量能够准确地推断不同词之间的语义关系。ATLAS 使用长短期记忆神经网络从攻击序列或非攻击序列中学习模型，帮助 ATLAS 捕捉 APT 攻击的潜伏性和反射模式。</p>

<h3 id="3-攻击调查attack-investigation">3. 攻击调查（Attack Investigation）：</h3>
<h4 id="攻击实体的识别attack-entity-identification">攻击实体的识别（Attack Entity Identification）：</h4>
<p>ATLAS 通过查询基于序列的学习模型，自动发现与攻击症状相关的实体，通过给定的攻击症状实体自动发现更多的攻击实体。具体来说，ATLAS 枚举所有未知实体，并确定因果关系图中的实体是攻击实体还是非攻击实体，该过程通过检查未知实体和带有攻击症状实体之间的事件是否与先前学习的攻击模型相关，以此识别未知实体是否为攻击的一部分。</p>
<h4 id="攻击过程恢复attack-story-recovery">攻击过程恢复（Attack Story Recovery）：</h4>
<p>ATLAS 提取识别出的攻击实体邻域图将包含所有事件作为攻击事件，这些事件进一步按照时间戳排序来恢复攻击过程。如下图所示，（b）和（c）展示了 ATLAS 从（a）中的因果关系图恢复的攻击过程。</p>

<p><img src="https://bu-shuo.github.io/image/2021-08-15-07.png" alt="恢复攻击过程" /></p>

<h4 id="处理多主机攻击handling-multi-host-attack">处理多主机攻击（Handling Multi-host Attack）：</h4>
<p>ATLAS 调查不需要关联不同宿主之间的因果关系图，只需要对单个主机的日志进行分析就可以发现所有的攻击实体。ATLAS 使用从主机中识别出的攻击实体，就能提取一个包含因果关系图中所有攻击事件的邻域图，接着构建一个序列来描述跨多个主机的攻击过程。</p>

:ET